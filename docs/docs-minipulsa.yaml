openapi: 3.0.1
info:
  title: MINIPULSA
  version: 1.0.0
  description: minipulsa build with grpc and api gateway
  contact:
    email: rezaelangerlangga14@gmail.com
    name: Muhammad Reza Elang Erlangga
    url: github.com/elangreza14/minipulsa
servers:
  - url: http://localhost:8080
    description: local
paths:
  /authentication/login-register:
    post:
      tags:
        - Authentication
      description: Api To Login and Register
      operationId: Authentication.AuthenticationRegisterLogin
      requestBody:
        description: "body"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationRegisterLogin"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
      summary: Api to login and register

  /product/list:
    get:
      tags:
        - Product
      description: Api To Login and Register
      operationId: Product.ProductList
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
      summary: Api to get minipulsa product

  /wallet/use:
    post:
      security:
        - bearerAuth: []
      tags:
        - Wallet
      description: API to Charge UP the minipulsa Wallet
      operationId: Wallet.WalletUse
      requestBody:
        description: "body"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WalletUse"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
      summary: API to Charge UP the minipulsa Wallet

  /wallet/detail:
    get:
      security:
        - bearerAuth: []
      tags:
        - Wallet
      description: API to get detail of wallet
      operationId: Wallet.WalletDetail
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
      summary: API to get detail of wallet

  /order/process:
    post:
      security:
        - bearerAuth: []
      tags:
        - Order
      description: API to Process order to buy pulsa
      operationId: Order.OrderUse
      requestBody:
        description: "body"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderProcess"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
      summary: API to Process order to buy pulsa

  /order/detail:
    get:
      security:
        - bearerAuth: []
      tags:
        - Order
      description: API to get detail of order
      operationId: Order.OrderDetail
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseHTTP"
      summary: API to get detail of order

## COMPONENTS
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthenticationRegisterLogin:
      properties:
        email:
          type: string
          example: string@string.com
        password:
          type: string
          example: string
      required:
        - email
        - password
      type: object
    ResponseHTTP:
      properties:
        code:
          type: integer
        data: {}
        msg:
          items:
            type: string
          type: array
      type: object
    WalletUse:
      properties:
        amount:
          type: integer
      required:
        - amount
      type: object
    OrderProcess:
      properties:
        product_id:
          type: integer
      required:
        - product_id
      type: object
